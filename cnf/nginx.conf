# local nginx configuration for default
# environment: global
#
# * this file is included within server {} at /etc/nginx/sites-enabled/default.conf
# * add project specific configurations here
# * reload changes by executing `nginx-reload`
# * feel free to remove this comments, but do not delete this file as it is required for nginx to start
# * for details, see https://docs.opsone.ch/7-0-stable/services/website.html#nginx
#
# LOCATION OVERRIDE WARNING
# when overriding the default location, make sure to deny access to private files and directories
# manually, or include our global security locations:
# include /etc/nginx/custom/security.conf;

###############################################################################
# Copied from /etc/nginx/custom/security.conf

# deny access to some file suffixes known for their private content
location ~* "(?i)((\.(bac?k|yml|sql|ini|log|sh|inc|md|sw[op]|dist)|~)$|(^|/)changelog(\.[a-zA-Z]+)?$)" {
  satisfy all;
  deny all;
}

# deny access to some locations known for their private content
location ~* "(?i)((.*typo3(conf)?)\/(|.*\/)((private|test|build)\/).*)" {
  satisfy all;
  deny all;
}

# deny access to composer.json/lock
location ~* composer\.(?:json|lock) {
  satisfy all;
  deny all;
}

# ACME challenge is answered from a global directory on each server
location ~ ^\/.well-known\/acme-challenge\/(.*)$ {
  allow	all;
  satisfy any;
  alias	/var/www-acme-challenge/$1;
}

# deny access to hidden files
location ~ (?!^\/\.well-known)\/\. {
  satisfy all;
  deny all;
}


###############################################################################
# Custom configuration

# Allow Gilbertsoft IPs to enable API testing at get.typo3.dev
allow 213.144.157.127;
allow 2001:1620:c7f:111::/64;

# Block abusing IPs
deny 212.95.122.212;

# Allow access to packages.json
modsecurity_rules 'SecRuleRemoveById 930130';

# Allow DELETE method
modsecurity_rules 'SecRuleRemoveById 911100';


###############################################################################
# Symfony routing configuration

# try to serve file directly, fallback to Symfony
location / {
  try_files $uri @symfony;
}

# Directly return 404 for not found static resources
location /assets {
  try_files $uri =404;
}

location /bundles {
  try_files $uri =404;
}

location /p {
  try_files $uri =404;
}

location /p2 {
  try_files $uri =404;
}

# Block access to satis folder
location /satis {
  satisfy all;
  deny all;
}

# Allow access to /index.php and forward to default PHP configuration
location ~ ^/index\.php(/|$) {
  try_files /dev/null @php81;
  internal;
}

# Block access to other .php files
location ~ \.php$ {
  return 404;
}

# Symfony routing configuration, add path as arguments to /index.php
location @symfony {
  try_files /dev/null /index.php$is_args$args;
}
